{
  "openapi": "3.0.0",
  "info": {
    "title": "Mega Project Management API",
    "version": "1.0.0",
    "description": "API documentation for the Mega Project Management backend."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/healthcheck": {
      "get": {
        "tags": [
          "Healthcheck"
        ],
        "summary": "Check server and database health",
        "description": "Returns the status of the server and MongoDB connection. Returns 200 if both are healthy, 503 if the database is down.",
        "security": [],
        "x-public": true,
        "responses": {
          "200": {
            "description": "Server and database are healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "server": {
                      "type": "string",
                      "example": "ok"
                    },
                    "database": {
                      "type": "string",
                      "example": "ok"
                    },
                    "dbError": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Healthcheck failed (unexpected error)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Healthcheck failed"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Database connection is down",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 503
                    },
                    "message": {
                      "type": "string",
                      "example": "Database connection is down"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "server": {
                            "type": "string"
                          },
                          "database": {
                            "type": "string"
                          },
                          "dbError": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 30
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "Email or username already exists"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Invalid credentials or unverified email"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout the current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get the current user's profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "publicId": {
                              "type": "string"
                            }
                          }
                        },
                        "role": {
                          "type": "string"
                        },
                        "isEmailVerified": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request a password reset email",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent"
          },
          "400": {
            "description": "Validation error"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/api/v1/auth/reset-password/{token}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 32
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "confirmPassword"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "confirmPassword": {
                    "type": "string",
                    "minLength": 8
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/api/v1/auth/resend-verification-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Resend email verification link",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email resent"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token"
          },
          "400": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/v1/auth/delete-account": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete the current user's account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Deletes the authenticated user's account. Password must be provided as a query parameter or header for extra security.",
        "responses": {
          "200": {
            "description": "Account deleted"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/update-profile": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update the current user's profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 30
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/verify-email/{token}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify user email",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 32
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        }
      }
    },
    "/api/v1/projects/create-project": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create a new project",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "archived",
                      "completed"
                    ]
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ]
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Project with this name already exists"
          }
        }
      }
    },
    "/api/v1/projects/get-projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all projects for the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Projects retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Update project by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "archived",
                      "completed"
                    ]
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ]
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete project by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/members": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all members of a project",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project members retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Add a member to a project",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "PROJECT_ADMIN",
                      "MEMBER",
                      "VIEWER"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member added to project successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project or user not found"
          },
          "409": {
            "description": "User already a member"
          }
        },
        "x-roles": [
          "PROJECT_ADMIN"
        ]
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Bulk update project members' roles",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "members"
                ],
                "properties": {
                  "members": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "required": [
                        "memberId",
                        "role"
                      ],
                      "properties": {
                        "memberId": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "PROJECT_ADMIN",
                            "MEMBER",
                            "VIEWER"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project members updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project or member not found"
          }
        },
        "x-roles": [
          "PROJECT_ADMIN"
        ]
      }
    },
    "/api/v1/projects/{projectId}/members/{memberId}/role": {
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Update a project member's role",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "role"
                ],
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "PROJECT_ADMIN",
                      "MEMBER",
                      "VIEWER"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member role updated successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project or member not found"
          }
        },
        "x-roles": [
          "PROJECT_ADMIN"
        ]
      }
    },
    "/api/v1/projects/{projectId}/members/{memberId}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Remove a member from a project",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "memberId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member removed from project successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project or member not found"
          }
        },
        "x-roles": [
          "PROJECT_ADMIN"
        ]
      }
    },
    "/api/v1/projects/{projectId}/status": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get project status by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project status retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/v1/tasks/{projectId}/create-task": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create a new task in a project",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done"
                    ]
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "assignedTo": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "mimetype": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "originalname": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member or insufficient role)"
          },
          "404": {
            "description": "Project or user not found"
          }
        }
      }
    },
    "/api/v1/tasks/{projectId}/get-tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all tasks for a project (with filtering, sorting, pagination)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "todo",
                "in_progress",
                "done"
              ]
            }
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            }
          },
          {
            "in": "query",
            "name": "assignedTo",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exactAssignedTo",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "createdBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "needsReview",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/v1/tasks/{projectId}/get-task/{taskId}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/tasks/{projectId}/assign-task/{taskId}": {
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Assign users to a task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignedTo": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task assignment updated successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member or insufficient role)"
          },
          "404": {
            "description": "Project, task, or user not found"
          }
        }
      }
    },
    "/api/v1/tasks/{boardId}/get-board-tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get all tasks for a board (with filtering, sorting, pagination)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "todo",
                "in_progress",
                "done"
              ]
            }
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            }
          },
          {
            "in": "query",
            "name": "assignedTo",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exactAssignedTo",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "createdBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "needsReview",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board tasks fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a board/project member)"
          },
          "404": {
            "description": "Board not found"
          }
        }
      }
    },
    "/api/v1/tasks/{projectId}/update-task/{taskId}": {
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update a task by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "todo",
                      "in_progress",
                      "done"
                    ]
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "assignedTo": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "mimetype": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "originalname": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member or insufficient role)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/tasks/{projectId}/delete-task/{taskId}": {
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a task by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member or insufficient role)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/boards/{projectId}/create-board": {
      "post": {
        "tags": [
          "Boards"
        ],
        "summary": "Create a new board in a project",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": [
                      "To Do",
                      "In Progress",
                      "Done"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board created successfully"
          },
          "400": {
            "description": "Validation error or invalid board name"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project not found"
          },
          "409": {
            "description": "A board with this name already exists"
          }
        }
      }
    },
    "/api/v1/boards/{projectId}/get-boards": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "Get all boards for a project (with tasks)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boards with tasks fetched successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/v1/boards/{projectId}/get-board/{boardId}": {
      "get": {
        "tags": [
          "Boards"
        ],
        "summary": "Get a board by ID (with tasks)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board and tasks fetched successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or board not found"
          }
        }
      }
    },
    "/api/v1/boards/{projectId}/delete-board/{boardId}": {
      "delete": {
        "tags": [
          "Boards"
        ],
        "summary": "Delete a board by ID (soft delete)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project or board not found"
          }
        }
      }
    },
    "/api/v1/subtasks/{projectId}/{taskId}/create-subtask": {
      "post": {
        "tags": [
          "Subtasks"
        ],
        "summary": "Create a subtask for a task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Project admin or project member assigned to the task.",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subtask created successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member, not a project admin, or not assigned to the task)"
          },
          "404": {
            "description": "Project or task not found"
          },
          "409": {
            "description": "A subtask with this title already exists"
          }
        }
      }
    },
    "/api/v1/subtasks/{projectId}/{taskId}/update-subtask/{subtaskId}": {
      "patch": {
        "tags": [
          "Subtasks"
        ],
        "summary": "Update a subtask by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Project admin or project member who owns or is assigned to the subtask.",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subtaskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "isCompleted": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subtask updated successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member, not a project admin, or not assigned/owner of the subtask)"
          },
          "404": {
            "description": "Project, task, or subtask not found"
          }
        }
      }
    },
    "/api/v1/subtasks/{projectId}/{taskId}/delete-subtask/{subtaskId}": {
      "delete": {
        "tags": [
          "Subtasks"
        ],
        "summary": "Delete a subtask by ID (soft delete)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-roles": [
          "PROJECT_ADMIN"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subtaskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subtask deleted successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin)"
          },
          "404": {
            "description": "Project, task, or subtask not found"
          }
        }
      }
    },
    "/api/v1/subtasks/{projectId}/{taskId}/get-subtasks": {
      "get": {
        "tags": [
          "Subtasks"
        ],
        "summary": "Get all subtasks for a task (with filtering, pagination)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "isCompleted",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subtasks fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/subtasks/{projectId}/{taskId}/get-subtask/{subtaskId}": {
      "get": {
        "tags": [
          "Subtasks"
        ],
        "summary": "Get a subtask by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subtaskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subtask fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project, task, or subtask not found"
          }
        }
      }
    },
    "/api/v1/subtasks/{projectId}/get-all-subtasks": {
      "get": {
        "tags": [
          "Subtasks"
        ],
        "summary": "Get all subtasks for a project (with filtering, pagination)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "isCompleted",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "priority",
            "schema": {
              "type": "string",
              "enum": [
                "low",
                "medium",
                "high"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subtasks fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/create-note": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create a note for a project or task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Any project member",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "description": "Optional. If provided, creates a note for a specific task."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "content"
                ],
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 1000
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/get-notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get notes for a project or task (with filtering, pagination)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Any project member (private notes: only creator or admin)",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "description": "Optional. Filter notes for a specific task."
          },
          {
            "in": "query",
            "name": "visibility",
            "schema": {
              "type": "string",
              "enum": [
                "private",
                "public"
              ]
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notes fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/get-note/{noteId}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get a note by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Any project member (private notes: only creator or admin)",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "description": "Optional. If provided, validates note belongs to this task."
          }
        ],
        "responses": {
          "200": {
            "description": "Note fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member or not allowed to view private note)"
          },
          "404": {
            "description": "Project, task, or note not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/update-note/{noteId}": {
      "patch": {
        "tags": [
          "Notes"
        ],
        "summary": "Update a note by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Project admin or note creator",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "description": "Optional. If provided, validates note belongs to this task."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 1000
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin or note creator)"
          },
          "404": {
            "description": "Project, task, or note not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/delete-note/{noteId}": {
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Delete a note by ID (soft delete)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Project admin or note creator",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "noteId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            },
            "description": "Optional. If provided, validates note belongs to this task."
          }
        ],
        "responses": {
          "200": {
            "description": "Note deleted successfully"
          },
          "400": {
            "description": "Validation error or business logic error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project admin or note creator)"
          },
          "404": {
            "description": "Project, task, or note not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/note-analytics": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Get analytics for notes in a project or task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Any project member (private notes: only creator or admin)",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "visibility",
            "schema": {
              "type": "string",
              "enum": [
                "private",
                "public"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Note analytics fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    },
    "/api/v1/notes/{projectId}/search-notes": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Search notes in a project or task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-access": "Any project member (private notes: only creator or admin)",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "taskId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "visibility",
            "schema": {
              "type": "string",
              "enum": [
                "private",
                "public"
              ]
            }
          },
          {
            "in": "query",
            "name": "createdBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notes search results fetched successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden (not a project member)"
          },
          "404": {
            "description": "Project or task not found"
          }
        }
      }
    }
  },
  "tags": []
}